{"version":3,"sources":["authFunctions/saveToken.js","components/Auth/Login.js","components/Auth/Signup.js","components/Auth/Tab.js","pages/Auth.js","utils/LoaderButton.js"],"names":["saveToken","token","localStorage","setItem","withRouter","props","InformAppJsThatUserIsLoggedIn","useState","email","setEmail","password","setPassword","submitLoading","setSubmitLoading","errMsg","setErrMsg","onSubmit","e","preventDefault","formData","FormData","append","Axios","post","then","res","console","log","data","success","history","goBack","catch","err","response","message","handleSubmit","className","htmlFor","type","id","value","onChange","target","LoaderButton","setToken","submitLoader","setSubmitLoader","successMsg","setSuccessMsg","setSuccess","style","marginLeft","onClick","Tab","loginClicked","signupClicked","handleLoginClicked","handleSignupClicked","setLoginClicked","setSignupClicked","disabled","height","width","borderWidth","role"],"mappings":"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","file":"static/js/14.567ccde2.chunk.js","sourcesContent":["const saveToken = (token) => {\r\n    localStorage.setItem('token', token);\r\n};\r\n\r\nexport default saveToken;\r\n","import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport LoaderButton from '../../utils/LoaderButton';\r\nimport saveToken from '../../authFunctions/saveToken';\r\n\r\nfunction Login(props) {\r\n    // methods\r\n    const { InformAppJsThatUserIsLoggedIn } = props;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [submitLoading, setSubmitLoading] = useState(null);\r\n    const [errMsg, setErrMsg] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('email', email);\r\n        formData.append('password', password);\r\n        Axios.post('/api/users/login', formData)\r\n            .then((res) => {\r\n                setSubmitLoading(null);\r\n                console.log(res);\r\n                if (res.data.success) {\r\n                    console.log(res.data.token);\r\n                    saveToken(res.data.token);\r\n                    InformAppJsThatUserIsLoggedIn();\r\n                    props.history.goBack();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                if (err.response) {\r\n                    if (err.response.data) {\r\n                        setErrMsg(err.response.data.message);\r\n                    }\r\n                }\r\n                setSubmitLoading(null);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                {!!errMsg && <div className=\"alert alert-danger small\">{errMsg}</div>}\r\n                <div className=\"my-2\">\r\n                    <label htmlFor=\"login-email\" className=\"m-0 text-muted\">\r\n                        Email\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"login-email\"\r\n                        className=\"form-control bg-light\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                            setEmail(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"my-2\">\r\n                    <label htmlFor=\"login-password\" className=\"m-0 text-muted\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"login-password\"\r\n                        className=\"form-control bg-light\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"my-3\">\r\n                    {!submitLoading && (\r\n                        <button type=\"submit\" className=\"btn btn-warning auth-btn auth-login-btn \">\r\n                            login\r\n                        </button>\r\n                    )}\r\n                    {!!submitLoading && <LoaderButton className=\"btn btn-warning\" />}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import Axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport saveToken from '../../authFunctions/saveToken';\r\nimport LoaderButton from '../../utils/LoaderButton';\r\n\r\nfunction Signup(props) {\r\n    // methods\r\n    const { InformAppJsThatUserIsLoggedIn } = props;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [token, setToken] = useState(null);\r\n\r\n    const [submitLoader, setSubmitLoader] = useState(null);\r\n    const [errMsg, setErrMsg] = useState(null);\r\n    const [successMsg, setSuccessMsg] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSubmitLoader(true);\r\n\r\n        const formData = new FormData();\r\n        formData.append('email', email);\r\n        formData.append('password', password);\r\n        Axios.post('/api/users/signup', formData)\r\n            .then((res) => {\r\n                console.log(res);\r\n                setSubmitLoader(null);\r\n                if (res.data.success) {\r\n                    setSuccessMsg('signup successful');\r\n                    setErrMsg(null);\r\n                    setToken(res.data.token);\r\n                    setSuccess(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                setSubmitLoader(null);\r\n                if (err.response) {\r\n                    if (err.response.data) {\r\n                        setErrMsg(err.response.data.message);\r\n                        setSuccessMsg(null);\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleLogin = () => {\r\n        saveToken(token);\r\n        props.history.goBack();\r\n        InformAppJsThatUserIsLoggedIn();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <form onSubmit={(e) => handleSubmit(e)}>\r\n                    {!!successMsg && <div className=\"alert alert-success small\">{successMsg}</div>}\r\n                    {!!errMsg && <div className=\"alert alert-danger small\">{errMsg}</div>}\r\n                    <div className=\"my-2\">\r\n                        <label htmlFor=\"signup-email\" className=\"m-0 text-muted\">\r\n                            Email\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"login-email\"\r\n                            className=\"form-control bg-light\"\r\n                            value={email}\r\n                            onChange={(e) => {\r\n                                setEmail(e.target.value);\r\n                                setSuccessMsg(null);\r\n                                setErrMsg(null);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"my-2\">\r\n                        <label htmlFor=\"signup-password\" className=\"m-0 text-muted\">\r\n                            Password\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"signup-password\"\r\n                            className=\"form-control bg-light\"\r\n                            value={password}\r\n                            onChange={(e) => {\r\n                                setPassword(e.target.value);\r\n                                setSuccessMsg(null);\r\n                                setErrMsg(null);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        {!submitLoader && (\r\n                            <button type=\"submit\" className=\"btn btn-primary auth-btn auth-signup-btn\">\r\n                                Signup\r\n                            </button>\r\n                        )}\r\n                        {!!submitLoader && <LoaderButton className=\"btn btn-primary\" />}\r\n                        {!!success && (\r\n                            <button className=\"btn btn-success\" style={{ marginLeft: 8 }} onClick={() => handleLogin()}>\r\n                                login\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Signup);\r\n","import React from 'react';\r\n\r\nfunction Tab(props) {\r\n    // states\r\n    const { loginClicked, signupClicked } = props;\r\n    // methods\r\n    const { handleLoginClicked, handleSignupClicked } = props;\r\n\r\n    return (\r\n        <div className=\"d-flex mb-4\">\r\n            <div\r\n                className={\r\n                    loginClicked ? 'tab-btn login-tab p-2 text-muted active' : 'tab-btn login-tab p-2 text-muted'\r\n                }\r\n                onClick={() => handleLoginClicked()}\r\n            >\r\n                login\r\n            </div>\r\n            <div\r\n                className={\r\n                    signupClicked ? 'tab-btn signup-tab p-2 text-muted active' : 'tab-btn signup-tab p-2 text-muted'\r\n                }\r\n                onClick={() => handleSignupClicked()}\r\n            >\r\n                signup\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tab;\r\n","import React, { useState } from 'react';\r\nimport '../styles/auth.css';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Login from '../components/Auth/Login';\r\nimport Signup from '../components/Auth/Signup';\r\nimport Tab from '../components/Auth/Tab';\r\n\r\nfunction Auth(props) {\r\n    // methods\r\n    const { InformAppJsThatUserIsLoggedIn } = props;\r\n\r\n    const [loginClicked, setLoginClicked] = useState(true);\r\n    const [signupClicked, setSignupClicked] = useState(null);\r\n\r\n    const handleLoginClicked = () => {\r\n        setLoginClicked(true);\r\n        setSignupClicked(null);\r\n    };\r\n\r\n    const handleSignupClicked = () => {\r\n        setLoginClicked(null);\r\n        setSignupClicked(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"auth_container mx-auto mt-5 border px-4 py-2 rounded bg-white shadow-sm\">\r\n                <Tab\r\n                    loginClicked={loginClicked}\r\n                    signupClicked={signupClicked}\r\n                    handleLoginClicked={handleLoginClicked}\r\n                    handleSignupClicked={handleSignupClicked}\r\n                />\r\n                {loginClicked && <Login InformAppJsThatUserIsLoggedIn={InformAppJsThatUserIsLoggedIn} />}\r\n                {signupClicked && <Signup InformAppJsThatUserIsLoggedIn={InformAppJsThatUserIsLoggedIn} />}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Auth);\r\n","import React from 'react';\r\n\r\nfunction LoaderButton(props) {\r\n    const { className } = props;\r\n    return (\r\n        <button type=\"button\" className={className} disabled>\r\n            <div className=\"spinner-border\" style={{ height: 16, width: 16, borderWidth: 2 }} role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default LoaderButton;\r\n"],"sourceRoot":""}