{"version":3,"sources":["pages/SingleRoom.js","utils/RatingComponent.js","components/cart/addToCart.js","utils/LoaderButton.js","components/Global/Review.js","authFunctions/getToken.js"],"names":["withRouter","props","useState","room","setRoom","roomReviews","setRoomReviews","rateValueInput","setRateValue","reviewInput","setReviewInput","reviewSubmitSuccess","setReviewSubmitSuccess","reviewSubmitErrMsg","setReviewSubmitErrMsg","reviewSubmitLoader","setReviewSubmitLoader","wholeScreenLoader","setWholeScreenLoader","authenticated","setAuthenticated","addToCartClicked","setAddToCartClicked","useEffect","auth","checkIfAuthenticated","axios","get","match","params","room_id","then","res","data","success","catch","err","console","log","response","status","history","push","className","loading","src","alt","style","minWidth","maxWidth","fontSize","title","avg_rating","reviewsCount","length","onClick","addToCart","type","_id","name","setTimeout","disabled","href","color","onMouseEnter","onMouseOver","onSubmit","e","preventDefault","formData","FormData","append","post","headers","Authorization","getToken","message","handleReviewSubmit","htmlFor","id","minRows","maxRows","value","onChange","target","map","review","fontWeight","RatingComponent","num","undefined","toFixed","parseFloat","intPart","Math","trunc","showHalfStar","emptyStarsCount","decPart","fullStarsArr","i","emptyStarsArr","index","obj","items","JSON","parse","localStorage","getItem","setItem","stringify","LoaderButton","height","width","borderWidth","role","Review","user_id","email","split","join","rate_value","moment","created_at","calendar","fromNow","backgroundColor","comment"],"mappings":"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","file":"static/js/13.3a951901.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextAreaAutoSize from 'react-textarea-autosize';\r\nimport axios from 'axios';\r\nimport Review from '../components/Global/Review';\r\nimport LoaderButton from '../utils/LoaderButton';\r\nimport RatingComponent from '../utils/RatingComponent';\r\nimport WholeScreenLoader from '../utils/WholeScreenLoader';\r\nimport getToken from '../authFunctions/getToken';\r\nimport checkIfAuthenticated from '../authFunctions/checkIfAuthenticated';\r\nimport { withRouter } from 'react-router-dom';\r\nimport addToCart from '../components/cart/addToCart';\r\n\r\nfunction SingleRoom(props) {\r\n    const [room, setRoom] = useState({});\r\n    const [roomReviews, setRoomReviews] = useState([]);\r\n\r\n    const [rateValueInput, setRateValue] = useState(0);\r\n    const [reviewInput, setReviewInput] = useState('');\r\n\r\n    const [reviewSubmitSuccess, setReviewSubmitSuccess] = useState(null);\r\n    const [reviewSubmitErrMsg, setReviewSubmitErrMsg] = useState(null);\r\n    const [reviewSubmitLoader, setReviewSubmitLoader] = useState(null);\r\n    const [wholeScreenLoader, setWholeScreenLoader] = useState(null);\r\n\r\n    const [authenticated, setAuthenticated] = useState(null);\r\n    const [addToCartClicked, setAddToCartClicked] = useState(null);\r\n\r\n    const handleReviewSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (rateValueInput === 0) {\r\n            setReviewSubmitErrMsg('please specify your rating');\r\n            return;\r\n        }\r\n        if (!reviewInput.length) {\r\n            setReviewSubmitErrMsg('please write a review before submitting');\r\n            return;\r\n        }\r\n        setReviewSubmitLoader(true);\r\n        const formData = new FormData();\r\n        formData.append('rate_value', rateValueInput);\r\n        formData.append('comment', reviewInput);\r\n\r\n        axios\r\n            .post(`/api/rooms/room-reviews/create/${props.match.params.room_id}`, formData, {\r\n                headers: {\r\n                    Authorization: getToken(),\r\n                },\r\n            })\r\n            .then((res) => {\r\n                // console.log(res);\r\n                setReviewSubmitLoader(null);\r\n                if (res.data.success) {\r\n                    setReviewSubmitSuccess(true);\r\n                    setReviewSubmitErrMsg(null);\r\n                    setRateValue(0);\r\n                    setReviewInput('');\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                setReviewSubmitSuccess(null);\r\n                setReviewSubmitLoader(null);\r\n\r\n                if (err.response) {\r\n                    if (err.response.data) {\r\n                        setReviewSubmitErrMsg(err.response.data.message);\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // check if authenticated\r\n        const auth = checkIfAuthenticated();\r\n        if (auth) {\r\n            setAuthenticated(true);\r\n        } else {\r\n            setAuthenticated(null);\r\n        }\r\n\r\n        setWholeScreenLoader(true);\r\n        axios\r\n            .get('/api/rooms/view-room-with-reviews/' + props.match.params.room_id)\r\n            .then((res) => {\r\n                // console.log(res);\r\n                setWholeScreenLoader(null);\r\n                if (res.data.success) {\r\n                    setRoom(res.data.room);\r\n                    setRoomReviews(res.data.roomReviews);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                setWholeScreenLoader(null);\r\n                if (err.response) {\r\n                    if (err.response.status === 500 || err.response.status === 404) {\r\n                        props.history.push('/not-found');\r\n                    }\r\n                }\r\n            });\r\n        return () => {};\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {!!wholeScreenLoader && <WholeScreenLoader />}\r\n            <div className=\"container bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 my-3\">\r\n                        <div className=\"border rounded p-2 shadow-sm\">\r\n                            <img\r\n                                loading=\"lazy\"\r\n                                src=\"https://images.unsplash.com/photo-1441794016917-7b6933969960?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JlLWZlZWR8NHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n                                alt=\"\"\r\n                                style={{ minWidth: '100%', maxWidth: '100%' }}\r\n                                className=\"rounded\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 my-3 p-3\">\r\n                        <h3 className=\"text-dark display-4\" style={{ fontSize: 36 }}>\r\n                            {room.title}\r\n                        </h3>\r\n                        <div className=\"single-room-ratings-container\">\r\n                            {room.avg_rating && (\r\n                                <RatingComponent avg_rating={room.avg_rating} reviewsCount={roomReviews.length} />\r\n                            )}\r\n                            {!room.avg_rating && <RatingComponent avg_rating={0} reviewsCount={0} />}\r\n                        </div>\r\n                        <div className=\"single-room-buttons-container my-4\">\r\n                            <button\r\n                                className=\"btn btn-warning w-75 my-1 \"\r\n                                onClick={() => {\r\n                                    addToCart({ type: 'room', _id: room._id, name: room.title });\r\n                                    setAddToCartClicked(true);\r\n                                    setTimeout(() => {\r\n                                        setAddToCartClicked(null);\r\n                                    }, 1500);\r\n                                }}\r\n                                disabled={addToCartClicked ? true : false}\r\n                            >\r\n                                <strong className=\"text-dark\">\r\n                                    {addToCartClicked ? 'added to cart' : 'Add to cart'}\r\n                                </strong>\r\n                            </button>\r\n                            <button className=\"btn btn-success w-75 my-1\">\r\n                                <strong className=\"text-light\">Book room</strong>\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"#view-room-reviews-container\">view reviews</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"add-rating-container \">\r\n                    <h4 className=\"display-4\" style={{ fontSize: 30 }}>\r\n                        Add a review\r\n                    </h4>\r\n                    {!!reviewSubmitSuccess && (\r\n                        <div className=\"alert alert-success small\">your review has been added</div>\r\n                    )}\r\n                    {!!reviewSubmitErrMsg && <div className=\"alert alert-danger small\">{reviewSubmitErrMsg}</div>}\r\n                    {!authenticated && (\r\n                        <div className=\"alert alert-warning small\">\r\n                            you are not logged in, please log in to add your review\r\n                        </div>\r\n                    )}\r\n                    <div className=\"add-rating-icons-container\">\r\n                        <i\r\n                            className=\"fas fa-star\"\r\n                            style={{ color: rateValueInput >= 1 ? '#ffb01d' : '#9f9f9f' }}\r\n                            onClick={() => {\r\n                                setRateValue(1);\r\n                            }}\r\n                            onMouseEnter={() => {\r\n                                setRateValue(1);\r\n                            }}\r\n                            // onMouseLeave={() => {\r\n                            //     setRateValue(0);\r\n                            // }}\r\n                        ></i>\r\n                        <i\r\n                            className=\"fas fa-star\"\r\n                            style={{ color: rateValueInput >= 2 ? '#ffb01d' : '#9f9f9f' }}\r\n                            onClick={() => {\r\n                                setRateValue(2);\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                setRateValue(2);\r\n                            }}\r\n                            // onMouseLeave={() => {\r\n                            //     setRateValue(0);\r\n                            // }}\r\n                        ></i>\r\n                        <i\r\n                            className=\"fas fa-star\"\r\n                            style={{ color: rateValueInput >= 3 ? '#ffb01d' : '#9f9f9f' }}\r\n                            onClick={() => {\r\n                                setRateValue(3);\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                setRateValue(3);\r\n                            }}\r\n                            // onMouseLeave={() => {\r\n                            //     setRateValue(0);\r\n                            // }}\r\n                        ></i>\r\n                        <i\r\n                            className=\"fas fa-star\"\r\n                            style={{ color: rateValueInput >= 4 ? '#ffb01d' : '#9f9f9f' }}\r\n                            onClick={() => {\r\n                                setRateValue(4);\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                setRateValue(4);\r\n                            }}\r\n                            // onMouseLeave={() => {\r\n                            //     setRateValue(0);\r\n                            // }}\r\n                        ></i>\r\n                        <i\r\n                            className=\"fas fa-star\"\r\n                            style={{ color: rateValueInput >= 5 ? '#ffb01d' : '#9f9f9f' }}\r\n                            onClick={() => {\r\n                                setRateValue(5);\r\n                            }}\r\n                            onMouseOver={() => {\r\n                                setRateValue(5);\r\n                            }}\r\n                            // onMouseOut={() => {\r\n                            //     setRateValue(0);\r\n                            // }}\r\n                        ></i>\r\n                    </div>\r\n                    <div>\r\n                        <form onSubmit={(e) => handleReviewSubmit(e)}>\r\n                            <div>\r\n                                <label htmlFor=\"room-review-text\" className=\"text-muted my-1\">\r\n                                    Write a review\r\n                                </label>\r\n                                <TextAreaAutoSize\r\n                                    id=\"room-review-text\"\r\n                                    className=\"form-control\"\r\n                                    minRows={2}\r\n                                    maxRows={10}\r\n                                    value={reviewInput}\r\n                                    onChange={(e) => setReviewInput(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                {!reviewSubmitLoader && (\r\n                                    <button type=\"submit\" className=\"btn btn-sm btn-primary\">\r\n                                        <strong className=\"text-light\">submit</strong>\r\n                                    </button>\r\n                                )}\r\n                                {!!reviewSubmitLoader && <LoaderButton className=\"btn btn-sm btn-primary\" />}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {/*  */}\r\n                <div className=\"mt-3 mb-5\" id=\"view-room-reviews-container\">\r\n                    <h4 className=\"display-4\" style={{ fontSize: 30 }}>\r\n                        Room reviews\r\n                    </h4>\r\n                    {!!roomReviews.length &&\r\n                        roomReviews.map((review) => {\r\n                            return <Review key={review._id} review={review} />;\r\n                        })}\r\n                    {!roomReviews.length && (\r\n                        <div className=\"pb-5 pt-3 text-muted text-center\">\r\n                            <h5 style={{ fontWeight: 400 }}>No reviews added yet</h5>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(SingleRoom);\r\n","const RatingComponent = (props) => {\r\n    let { avg_rating, reviewsCount } = props;\r\n\r\n    let num = avg_rating;\r\n    if (num == null || num === undefined) {\r\n        num = 0;\r\n        reviewsCount = 0;\r\n    }\r\n\r\n    num = num.toFixed(2);\r\n    num = parseFloat(num);\r\n    let intPart = Math.trunc(num);\r\n    let showHalfStar = null;\r\n    let emptyStarsCount = null;\r\n    let decPart = parseFloat((num - intPart).toFixed(2));\r\n\r\n    if (decPart >= 0.75) {\r\n        intPart++;\r\n    }\r\n    if (decPart < 0.75 && decPart >= 0.25) {\r\n        showHalfStar = true;\r\n    }\r\n    if ((intPart == 4 && showHalfStar) || intPart == 5) {\r\n        emptyStarsCount = null;\r\n    } else {\r\n        emptyStarsCount = 5 - intPart;\r\n    }\r\n\r\n    let fullStarsArr = [];\r\n    for (let i = 0; i < intPart; i++) {\r\n        fullStarsArr.push(i);\r\n    }\r\n\r\n    let emptyStarsArr = [];\r\n    for (let i = 0; i < emptyStarsCount; i++) {\r\n        emptyStarsArr.push(i);\r\n    }\r\n\r\n    return (\r\n        <section className=\"card-rating\">\r\n            {fullStarsArr.map((index) => {\r\n                return <i key={index} className=\"fas fa-star\"></i>;\r\n            })}\r\n            {!!showHalfStar && <i className=\"fas fa-star-half-alt\"></i>}\r\n            {emptyStarsArr.map((index) => {\r\n                return <i key={index} className=\"far fa-star\"></i>;\r\n            })}\r\n            {!!reviewsCount && <span className=\"small text-muted\"> ({reviewsCount})</span>}\r\n            {/* {!reviewsCount && <span className=\"small text-muted\"> (0)</span>} */}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default RatingComponent;\r\n","const addToCart = (obj) => {\r\n    console.log(obj);\r\n    let items = JSON.parse(localStorage.getItem('items')) || [];\r\n    items = [...items, { ...obj }];\r\n    localStorage.setItem('items', JSON.stringify(items));\r\n};\r\n\r\nexport default addToCart;\r\n","import React from 'react';\r\n\r\nfunction LoaderButton(props) {\r\n    const { className } = props;\r\n    return (\r\n        <button type=\"button\" className={className} disabled>\r\n            <div className=\"spinner-border\" style={{ height: 16, width: 16, borderWidth: 2 }} role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default LoaderButton;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport RatingComponent from '../../utils/RatingComponent';\r\n\r\nfunction Review(props) {\r\n    const { review } = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-3\">\r\n                <div className=\"my-4\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            className=\"align-self-start\"\r\n                            src=\"https://images-na.ssl-images-amazon.com/images/S/amazon-avatars/default._CR0,0,1024,1024_SX48_.png\"\r\n                            alt=\"\"\r\n                        />\r\n                        <div className=\"px-2\">\r\n                            <strong className=\"small\">{review.user_id.email.split('.')[0].split('@').join(' ')}</strong>\r\n                            <RatingComponent avg_rating={review.rate_value} reviewsCount={null} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"small text-muted\">\r\n                        <span>\r\n                            {moment(review.created_at).calendar()}, {moment(review.created_at).fromNow()}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"my-2 px-3 py-2 text-dark rounded\" style={{ backgroundColor: '#eee', fontSize: 15 }}>\r\n                        {review.comment}\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Review;\r\n","const getToken = () => {\r\n    const token = localStorage.getItem('token');\r\n    return token;\r\n};\r\n\r\nexport default getToken;\r\n"],"sourceRoot":""}