{"version":3,"sources":["states/homePage.js","components/Home/RoomForm.js","components/Home/HallForm.js","slick/homeSettings.js","components/Home/RoomsSlider.js","components/Home/HallsSlider.js","components/Home/CheckResults.js","pages/Home.js","utils/RatingComponent.js","components/cart/addToCart.js","components/Global/Card.js"],"names":["roomsInSlider","hallsInSlider","roomTypes","roomCategories","hallCategories","module","exports","getRoomsForSlider","getHallsForSlider","setRoomsInSlider","arr","setHallsInSlider","setRoomCategoriesArr","setRoomTypesArr","setHallCategoriesArr","getRoomCategories","getRoomTypes","getHallCategories","RoomForm","props","noOfPeopleForRooms","setSelectedPeopleNumRoomHome","setSelectedRoomCatHome","setSelectedRoomTypeHome","useState","selectedCategory","setSelectedCategory","selectedType","setSelectedType","selectedNum","setSelectedNum","className","htmlFor","options","onChange","selected","value","noOfPeopleForHalls","setSelectedHallCatHome","setSelectedPeopleNumHallHome","settings","dots","infinite","autoplay","lazyload","speed","slidesToShow","slidesToScroll","responsive","breakpoint","RoomsSlider","roomsArr","length","map","room","Card","type","item","_id","HallsSlider","hallsArr","hall","CheckResults","roomSelected","addToCart_Id","setAddToCart_Id","result","title","to","onClick","addToCart","name","setTimeout","disabled","Home","setRoomSelected","hallSelected","setHallSelected","setRoomsArr","setHallsArr","setRoomTypes","setRoomCategories","setHallCategories","setNoOfPeopleForRooms","setNoOfPeopleForHalls","selectedRoomCatHome","selectedRoomTypeHome","selectedPeopleNumRoomHome","selectedHallCatHome","selectedPeopleNumHallHome","checkAvailClicked","setCheckAvailClicked","checkAvailErrMsg","setCheckAvailErrMsg","checkAvailResultsRoom","setCheckAvailResultsRoom","checkAvailResultsHall","setCheckAvailResultsHall","wholeScreenLoader","setWholeScreenLoader","useEffect","rooms","halls","fetchRooms","fetchHalls","roomTypesArr","roomCategoriesArr","hallCategoriesArr","fetchRoomTypes","fetchRoomCategories","fetchHallCategories","fetchNoOfPeople","axios","get","then","res","data","success","catch","err","console","log","category","label","room_category","response","roomType","room_type","roomArr","no_of_people_for_rooms","hallArr","no_of_people_for_halls","hall_category","checkRoomAvailability","params","no_of_people","checkHallAvailability","WholeScreenLoader","style","fontWeight","e","preventDefault","handleCheckAvailability","HallForm","fontSize","RatingComponent","avg_rating","reviewsCount","num","undefined","toFixed","parseFloat","intPart","Math","trunc","showHalfStar","emptyStarsCount","decPart","fullStarsArr","i","push","emptyStarsArr","index","obj","items","JSON","parse","localStorage","getItem","setItem","stringify","addToCartClicked","setAddToCartClicked","loading","maxWidth","src","alt","discount","textDecoration","marginRight","price"],"mappings":"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","file":"static/js/6.3a1b500f.chunk.js","sourcesContent":["let roomsInSlider = null;\r\nlet hallsInSlider = null;\r\n\r\nlet roomTypes = null;\r\nlet roomCategories = null;\r\nlet hallCategories = null;\r\n\r\n/*\r\n *************************\r\n */\r\nconst setRoomsInSlider = (arr) => {\r\n    roomsInSlider = arr;\r\n};\r\nconst getRoomsForSlider = () => {\r\n    return roomsInSlider;\r\n};\r\n/*\r\n *************************\r\n */\r\n\r\nconst setHallsInSlider = (arr) => {\r\n    hallsInSlider = arr;\r\n};\r\nconst getHallsForSlider = () => {\r\n    return hallsInSlider;\r\n};\r\n/*\r\n *************************\r\n */\r\n\r\nconst setRoomTypesArr = (arr) => {\r\n    roomTypes = arr;\r\n    return;\r\n};\r\nconst getRoomTypes = () => {\r\n    return roomTypes;\r\n};\r\n/*\r\n *************************\r\n */\r\n\r\nconst setRoomCategoriesArr = (arr) => {\r\n    roomCategories = arr;\r\n    return;\r\n};\r\nconst getRoomCategories = () => {\r\n    return roomCategories;\r\n};\r\n/*\r\n *************************\r\n */\r\n\r\nconst setHallCategoriesArr = (arr) => {\r\n    hallCategories = arr;\r\n    return;\r\n};\r\nconst getHallCategories = () => {\r\n    return hallCategories;\r\n};\r\n/*\r\n *************************\r\n */\r\n\r\nmodule.exports = {\r\n    getRoomsForSlider,\r\n    getHallsForSlider,\r\n    setRoomsInSlider,\r\n    setHallsInSlider,\r\n    setRoomCategoriesArr,\r\n    setRoomTypesArr,\r\n    setHallCategoriesArr,\r\n\r\n    getRoomCategories,\r\n    getRoomTypes,\r\n    getHallCategories,\r\n};\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n// import DatePicker from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction RoomForm(props) {\r\n    // states\r\n    const { roomCategories, roomTypes, noOfPeopleForRooms } = props;\r\n    // methods\r\n    const { setSelectedPeopleNumRoomHome, setSelectedRoomCatHome, setSelectedRoomTypeHome } = props;\r\n\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    // const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [selectedType, setSelectedType] = useState(null);\r\n    const [selectedNum, setSelectedNum] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-no-of-people\" className=\"small text-muted\">\r\n                        No. of people\r\n                    </label>\r\n                    <Select\r\n                        options={noOfPeopleForRooms}\r\n                        onChange={(selected) => {\r\n                            setSelectedNum(selected);\r\n                            setSelectedPeopleNumRoomHome(selected);\r\n                        }}\r\n                        value={selectedNum}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-room-category\" className=\"small text-muted\">\r\n                        Room category\r\n                    </label>\r\n                    <Select\r\n                        options={roomCategories}\r\n                        onChange={(selected) => {\r\n                            setSelectedCategory(selected);\r\n                            setSelectedRoomCatHome(selected);\r\n                        }}\r\n                        value={selectedCategory}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-room-type\" className=\"small text-muted\">\r\n                        Room Type\r\n                    </label>\r\n                    <Select\r\n                        options={roomTypes}\r\n                        onChange={(selected) => {\r\n                            setSelectedType(selected);\r\n                            setSelectedRoomTypeHome(selected);\r\n                        }}\r\n                        value={selectedType}\r\n                    />\r\n                </div>\r\n            </section>\r\n            {/* <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-check-in-date\" className=\"small text-muted d-block\">\r\n                        check in date\r\n                    </label>\r\n                    <DatePicker\r\n                        className=\"form-control\"\r\n                        id=\"select-check-in-date\"\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-check-out-date\" className=\"small text-muted d-block\">\r\n                        check out date\r\n                    </label>\r\n                    <DatePicker\r\n                        className=\"form-control\"\r\n                        id=\"select-check-out-date\"\r\n                        selected={endDate}\r\n                        onChange={(date) => setEndDate(date)}\r\n                    />\r\n                </div>\r\n            </section> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoomForm;\r\n","import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\n// import DatePicker from 'react-datepicker';\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nfunction RoomForm(props) {\r\n    // states\r\n    const { hallCategories, noOfPeopleForHalls } = props;\r\n    // methods\r\n    const { setSelectedHallCatHome, setSelectedPeopleNumHallHome } = props;\r\n\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    // const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [selectedNum, setSelectedNum] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-no-of-people\" className=\"small text-muted\">\r\n                        No. of people\r\n                    </label>\r\n                    <Select\r\n                        options={noOfPeopleForHalls}\r\n                        onChange={(selected) => {\r\n                            setSelectedNum(selected);\r\n                            setSelectedPeopleNumHallHome(selected);\r\n                        }}\r\n                        value={selectedNum}\r\n                    />\r\n                </div>\r\n            </section>\r\n            <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-room-category\" className=\"small text-muted\">\r\n                        Hall category\r\n                    </label>\r\n                    <Select\r\n                        options={hallCategories}\r\n                        onChange={(selected) => {\r\n                            setSelectedCategory(selected);\r\n                            setSelectedHallCatHome(selected);\r\n                        }}\r\n                        value={selectedCategory}\r\n                    />\r\n                </div>\r\n            </section>\r\n            {/* <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-check-in-date\" className=\"small text-muted d-block\">\r\n                        check in date\r\n                    </label>\r\n                    <DatePicker\r\n                        className=\"form-control\"\r\n                        id=\"select-check-in-date\"\r\n                        selected={startDate}\r\n                        onChange={(date) => setStartDate(date)}\r\n                    />\r\n                </div>\r\n            </section> */}\r\n            {/* <section className=\"col-12 col-sm-6 col-md-4 \">\r\n                <div className=\"m-2\">\r\n                    <label htmlFor=\"select-check-out-date\" className=\"small text-muted d-block\">\r\n                        check out date\r\n                    </label>\r\n                    <DatePicker\r\n                        className=\"form-control\"\r\n                        id=\"select-check-out-date\"\r\n                        selected={endDate}\r\n                        onChange={(date) => setEndDate(date)}\r\n                    />\r\n                </div>\r\n            </section> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RoomForm;\r\n","export const settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    autoplay: true,\r\n    lazyload: 'ondemand',\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    responsive: [\r\n        {\r\n            breakpoint: 1440,\r\n            settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 1,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 1024,\r\n            settings: {\r\n                slidesToShow: 3,\r\n                slidesToScroll: 1,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 900,\r\n            settings: {\r\n                slidesToScroll: 1,\r\n                slidesToShow: 2,\r\n            },\r\n        },\r\n        {\r\n            breakpoint: 480,\r\n            settings: {\r\n                slidesToScroll: 1,\r\n                slidesToShow: 1,\r\n            },\r\n        },\r\n    ],\r\n};\r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\n\r\nimport { settings } from '../../slick/homeSettings';\r\nimport Card from '../Global/Card';\r\n\r\nfunction RoomsSlider(props) {\r\n    const { roomsArr } = props;\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <h1 className=\"display-4\">Rooms</h1>\r\n            <div className=\"px-4\">\r\n                <Slider {...settings}>\r\n                    {!!roomsArr.length &&\r\n                        roomsArr.map((room) => {\r\n                            return <Card type={'room'} item={room} key={room._id} />;\r\n                        })}\r\n                </Slider>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomsSlider;\r\n","import React from 'react';\r\nimport Slider from 'react-slick';\r\n\r\nimport { settings } from '../../slick/homeSettings';\r\nimport Card from '../Global/Card';\r\n\r\nfunction HallsSlider(props) {\r\n    const { hallsArr } = props;\r\n\r\n    return (\r\n        <div className=\"my-5\">\r\n            <h1 className=\"display-4 \">Halls</h1>\r\n            <div className=\"px-4\">\r\n                <Slider {...settings}>\r\n                    {hallsArr.length &&\r\n                        hallsArr.map((hall) => {\r\n                            return <Card type={'hall'} key={hall._id} item={hall} />;\r\n                        })}\r\n                </Slider>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HallsSlider;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport addToCart from '../cart/addToCart';\r\n\r\nfunction CheckResults(props) {\r\n    // states\r\n    const { arr, roomSelected, addToCart_Id, type } = props;\r\n    // methods\r\n    const { setAddToCart_Id } = props;\r\n\r\n    return (\r\n        <>\r\n            {arr && (\r\n                <div className=\"my-2 p-4\">\r\n                    <div className=\"row p-3 bg-white border shadow-sm\">\r\n                        <div className=\"col-4\">\r\n                            <strong>Name</strong>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <strong>Type</strong>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <strong>Actions</strong>\r\n                        </div>\r\n                    </div>\r\n                    {!arr.length && (\r\n                        <div className=\"lead my-2 text-center text-dark\">\r\n                            No {roomSelected ? 'rooms' : 'halls'} to show\r\n                        </div>\r\n                    )}\r\n                    {arr.map((result) => {\r\n                        return (\r\n                            <div className=\"row p-2 border-bottom\">\r\n                                <div className=\"col-4\">{result.title}</div>\r\n                                <div className=\"col-4\">{type}</div>\r\n                                <div className=\"col-4\">\r\n                                    <Link\r\n                                        to={`/single-${type === 'room' ? 'room' : 'hall'}-page/${result._id}`}\r\n                                        className=\"btn btn-sm btn-primary mx-1\"\r\n                                    >\r\n                                        view\r\n                                    </Link>\r\n                                    <button\r\n                                        className=\"btn btn-sm btn-success mx-1\"\r\n                                        onClick={() => {\r\n                                            addToCart({\r\n                                                type: roomSelected ? 'room' : 'hall',\r\n                                                _id: result._id,\r\n                                                name: result.title,\r\n                                            });\r\n                                            setAddToCart_Id(result._id);\r\n                                            setTimeout(() => {\r\n                                                setAddToCart_Id(null);\r\n                                            }, 1500);\r\n                                        }}\r\n                                        disabled={addToCart_Id === result._id ? true : false}\r\n                                    >\r\n                                        {addToCart_Id === result._id ? 'added to cart' : 'Add to cart'}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CheckResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../styles/home.css';\r\nimport RoomForm from '../components/Home/RoomForm';\r\nimport HallForm from '../components/Home/HallForm';\r\nimport RoomsSlider from '../components/Home/RoomsSlider';\r\nimport HallsSlider from '../components/Home/HallsSlider';\r\nimport {\r\n    getHallCategories,\r\n    getHallsForSlider,\r\n    getRoomCategories,\r\n    getRoomsForSlider,\r\n    getRoomTypes,\r\n    setHallCategoriesArr,\r\n    setHallsInSlider,\r\n    setRoomCategoriesArr,\r\n    setRoomsInSlider,\r\n    setRoomTypesArr,\r\n} from '../states/homePage';\r\nimport WholeScreenLoader from '../utils/WholeScreenLoader';\r\nimport CheckResults from '../components/Home/CheckResults';\r\n\r\nfunction Home() {\r\n    const [roomSelected, setRoomSelected] = useState(true);\r\n    const [hallSelected, setHallSelected] = useState(null);\r\n\r\n    const [roomsArr, setRoomsArr] = useState([]);\r\n    const [hallsArr, setHallsArr] = useState([]);\r\n\r\n    const [roomTypes, setRoomTypes] = useState([]);\r\n    const [roomCategories, setRoomCategories] = useState([]);\r\n    const [hallCategories, setHallCategories] = useState([]);\r\n    const [noOfPeopleForRooms, setNoOfPeopleForRooms] = useState([]);\r\n    const [noOfPeopleForHalls, setNoOfPeopleForHalls] = useState([]);\r\n\r\n    const [selectedRoomCatHome, setSelectedRoomCatHome] = useState(null);\r\n    const [selectedRoomTypeHome, setSelectedRoomTypeHome] = useState(null);\r\n    const [selectedPeopleNumRoomHome, setSelectedPeopleNumRoomHome] = useState(null);\r\n\r\n    const [selectedHallCatHome, setSelectedHallCatHome] = useState(null);\r\n    const [selectedPeopleNumHallHome, setSelectedPeopleNumHallHome] = useState(null);\r\n\r\n    const [checkAvailClicked, setCheckAvailClicked] = useState(null);\r\n    const [checkAvailErrMsg, setCheckAvailErrMsg] = useState(null);\r\n    const [checkAvailResultsRoom, setCheckAvailResultsRoom] = useState(null);\r\n    const [checkAvailResultsHall, setCheckAvailResultsHall] = useState(null);\r\n\r\n    const [addToCart_Id, setAddToCart_Id] = useState(null);\r\n\r\n    const [wholeScreenLoader, setWholeScreenLoader] = useState(null);\r\n\r\n    const selectRoom = () => {\r\n        setRoomSelected(true);\r\n        setHallSelected(null);\r\n    };\r\n\r\n    const selectHall = () => {\r\n        setHallSelected(true);\r\n        setRoomSelected(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const rooms = getRoomsForSlider();\r\n        const halls = getHallsForSlider();\r\n        if (rooms) {\r\n            setRoomsArr(rooms);\r\n        }\r\n        if (!rooms) {\r\n            fetchRooms();\r\n        }\r\n        if (halls) {\r\n            setHallsArr(halls);\r\n        }\r\n        if (!halls) {\r\n            fetchHalls();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const roomTypesArr = getRoomTypes();\r\n        const roomCategoriesArr = getRoomCategories();\r\n        const hallCategoriesArr = getHallCategories();\r\n\r\n        if (!roomTypesArr) {\r\n            fetchRoomTypes();\r\n        } else if (roomTypesArr) {\r\n            setRoomTypes(roomTypesArr);\r\n        }\r\n\r\n        if (!roomCategoriesArr) {\r\n            fetchRoomCategories();\r\n        } else if (roomCategoriesArr) {\r\n            setRoomCategories(roomCategoriesArr);\r\n        }\r\n\r\n        if (!hallCategoriesArr) {\r\n            fetchHallCategories();\r\n        } else if (hallCategories) {\r\n            setHallCategories(hallCategoriesArr);\r\n        }\r\n\r\n        fetchNoOfPeople();\r\n\r\n        return () => {};\r\n    }, []);\r\n\r\n    const fetchRooms = () => {\r\n        setWholeScreenLoader(true);\r\n        axios\r\n            .get('/api/rooms/fetch-some-rooms-for-homepage')\r\n            .then((res) => {\r\n                // console.log(res);\r\n                setWholeScreenLoader(null);\r\n                if (res.data.success) {\r\n                    setRoomsInSlider(res.data.rooms);\r\n                    setRoomsArr(res.data.rooms);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setWholeScreenLoader(null);\r\n            });\r\n        return () => {};\r\n    };\r\n\r\n    const fetchHalls = () => {\r\n        axios\r\n            .get('/api/halls/fetch-some-halls-for-homepage')\r\n            .then((res) => {\r\n                // console.log(res);\r\n                if (res.data.success) {\r\n                    setHallsInSlider(res.data.halls);\r\n                    setHallsArr(res.data.halls);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        return () => {};\r\n    };\r\n\r\n    const fetchRoomCategories = () => {\r\n        axios\r\n            .get('/api/rooms/room-categories/view-room-categories')\r\n            .then((res) => {\r\n                // console.log('room categories', res);\r\n\r\n                let arr = res.data.roomCategories.map((category) => {\r\n                    return {\r\n                        value: category._id,\r\n                        label: category.room_category,\r\n                    };\r\n                });\r\n\r\n                setRoomCategories(arr);\r\n                setRoomCategoriesArr(arr);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    const fetchRoomTypes = () => {\r\n        axios\r\n            .get('/api/rooms/room-types/view-room-types')\r\n            .then((res) => {\r\n                // console.log('room types', res);\r\n                let arr = res.data.roomTypes.map((roomType) => {\r\n                    return {\r\n                        value: roomType._id,\r\n                        label: roomType.room_type,\r\n                    };\r\n                });\r\n\r\n                setRoomTypes(arr);\r\n                setRoomTypesArr(arr);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    const fetchNoOfPeople = () => {\r\n        axios\r\n            .get('/api/fetch-num-of-people')\r\n            .then((res) => {\r\n                // console.log('no of people ', res);\r\n                let roomArr = res.data.no_of_people_for_rooms.map((item) => {\r\n                    return {\r\n                        value: item,\r\n                        label: item,\r\n                    };\r\n                });\r\n                let hallArr = res.data.no_of_people_for_halls.map((item) => {\r\n                    return {\r\n                        value: item,\r\n                        label: item,\r\n                    };\r\n                });\r\n\r\n                setNoOfPeopleForRooms(roomArr);\r\n                setNoOfPeopleForHalls(hallArr);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    const fetchHallCategories = () => {\r\n        axios\r\n            .get('/api/halls/hall-categories/view-hall-categories')\r\n            .then((res) => {\r\n                // console.log('hall categories', res);\r\n                let arr = res.data.hallCategories.map((category) => {\r\n                    return {\r\n                        value: category._id,\r\n                        label: category.hall_category,\r\n                    };\r\n                });\r\n\r\n                setHallCategories(arr);\r\n                setHallCategoriesArr(arr);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    const handleCheckAvailability = (e) => {\r\n        e.preventDefault();\r\n        setCheckAvailClicked(true);\r\n        setCheckAvailErrMsg(null);\r\n        if (roomSelected) {\r\n            checkRoomAvailability();\r\n            return;\r\n        }\r\n        if (hallSelected) {\r\n            checkHallAvailability();\r\n            return;\r\n        }\r\n    };\r\n\r\n    const checkRoomAvailability = () => {\r\n        if (\r\n            (roomCategories.length && !selectedRoomCatHome) ||\r\n            (roomTypes.length && !selectedRoomTypeHome) ||\r\n            (noOfPeopleForRooms.length && !selectedPeopleNumRoomHome)\r\n        ) {\r\n            setCheckAvailErrMsg('please choose some fields');\r\n            setCheckAvailClicked(null);\r\n            return;\r\n        }\r\n        setCheckAvailErrMsg(null);\r\n\r\n        axios\r\n            .get('/api/check-room-availability', {\r\n                params: {\r\n                    room_category: selectedRoomCatHome && selectedRoomCatHome.value,\r\n                    room_type: selectedRoomTypeHome && selectedRoomTypeHome.value,\r\n                    no_of_people: selectedPeopleNumRoomHome && selectedPeopleNumRoomHome.value,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                // console.log(res);\r\n                setCheckAvailClicked(null);\r\n                setCheckAvailResultsRoom(res.data.rooms);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                setCheckAvailClicked(null);\r\n            });\r\n    };\r\n\r\n    const checkHallAvailability = () => {\r\n        if (\r\n            (hallCategories.length && !selectedHallCatHome) ||\r\n            (noOfPeopleForHalls.length && !selectedPeopleNumHallHome)\r\n        ) {\r\n            setCheckAvailErrMsg('please choose some fields');\r\n            setCheckAvailClicked(null);\r\n            return;\r\n        }\r\n        setCheckAvailErrMsg(null);\r\n\r\n        axios\r\n            .get('/api/check-hall-availability', {\r\n                params: {\r\n                    hall_category: selectedHallCatHome && selectedHallCatHome.value,\r\n                    no_of_people: selectedPeopleNumHallHome && selectedPeopleNumHallHome.value,\r\n                },\r\n            })\r\n            .then((res) => {\r\n                // console.log(res);\r\n                setCheckAvailResultsHall(res.data.halls);\r\n                setCheckAvailClicked(null);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                console.log(err.response);\r\n                setCheckAvailClicked(null);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!!wholeScreenLoader && <WholeScreenLoader />}\r\n\r\n            <div className=\"\">\r\n                <div className=\"home-title-container\">\r\n                    <div className=\"home-title-backdrop\"></div>\r\n                    <div className=\"title-intro-container\">\r\n                        <h1 className=\"home-title w-100 display-4 text-center my-3\">Paradise Hotel</h1>\r\n                        <div className=\"home-short-intro text-center\">\r\n                            your dream destination, book now for full package of happiness\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container home-everything-below-title-container rounded p-3 shadow-sm\">\r\n                    <form>\r\n                        <div className=\"w-100 d-flex flex-wrap justify-content-between align-items-center\">\r\n                            <div>\r\n                                <h4 className=\"text-dark\" style={{ fontWeight: 400 }}>\r\n                                    Book now\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <section className=\"select_hall_or_room_section  rounded\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className={\r\n                                            roomSelected\r\n                                                ? 'btn rounded-0 home-select-btn home-select-room-btn active'\r\n                                                : 'btn rounded-0 home-select-btn  home-select-room-btn'\r\n                                        }\r\n                                        onClick={() => {\r\n                                            selectRoom();\r\n                                        }}\r\n                                    >\r\n                                        room\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className={\r\n                                            hallSelected\r\n                                                ? 'btn rounded-0 home-select-btn  home-select-hall-btn active'\r\n                                                : 'btn rounded-0 home-select-btn  home-select-hall-btn'\r\n                                        }\r\n                                        onClick={() => {\r\n                                            selectHall();\r\n                                        }}\r\n                                    >\r\n                                        hall\r\n                                    </button>\r\n                                </section>\r\n                                <section className=\"m-2\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-warning shadow-sm\"\r\n                                        onClick={(e) => {\r\n                                            handleCheckAvailability(e);\r\n                                        }}\r\n                                        disabled={checkAvailClicked ? true : false}\r\n                                    >\r\n                                        <strong className=\"text-dark\">\r\n                                            {!!checkAvailClicked ? 'checking...' : 'check availability'}\r\n                                        </strong>\r\n                                    </button>\r\n                                </section>\r\n                            </div>\r\n                        </div>\r\n                        {!!checkAvailErrMsg && (\r\n                            <div className=\"alert alert-danger small mt-2 py-2\">{checkAvailErrMsg}</div>\r\n                        )}\r\n                        {/* {checkAvailResults && !checkAvailResults.length && (\r\n                            <div className=\"alert alert-warning small py-2\">{`sorry, no ${\r\n                                roomSelected ? 'rooms' : 'halls'\r\n                            } available, please choose another ${roomSelected ? 'room' : 'hall'}`}</div>\r\n                        )} */}\r\n\r\n                        <div className=\"d-flex flex-wrap my-2\">\r\n                            {roomSelected && (\r\n                                <RoomForm\r\n                                    roomCategories={roomCategories}\r\n                                    roomTypes={roomTypes}\r\n                                    noOfPeopleForRooms={noOfPeopleForRooms}\r\n                                    // methods\r\n                                    setSelectedPeopleNumRoomHome={setSelectedPeopleNumRoomHome}\r\n                                    setSelectedRoomCatHome={setSelectedRoomCatHome}\r\n                                    setSelectedRoomTypeHome={setSelectedRoomTypeHome}\r\n                                />\r\n                            )}\r\n                            {hallSelected && (\r\n                                <HallForm\r\n                                    hallCategories={hallCategories}\r\n                                    noOfPeopleForHalls={noOfPeopleForHalls}\r\n                                    // methods\r\n                                    setSelectedHallCatHome={setSelectedHallCatHome}\r\n                                    setSelectedPeopleNumHallHome={setSelectedPeopleNumHallHome}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                    {roomSelected && (\r\n                        <CheckResults\r\n                            roomSelected={roomSelected}\r\n                            addToCart_Id={addToCart_Id}\r\n                            setAddToCart_Id={setAddToCart_Id}\r\n                            type=\"room\"\r\n                            arr={checkAvailResultsRoom}\r\n                        />\r\n                    )}\r\n                    {hallSelected && (\r\n                        <CheckResults\r\n                            arr={checkAvailResultsHall}\r\n                            roomSelected={roomSelected}\r\n                            addToCart_Id={addToCart_Id}\r\n                            type=\"hall\"\r\n                            setAddToCart_Id={setAddToCart_Id}\r\n                        />\r\n                    )}\r\n                    {/*  */}\r\n                    <div className=\"my-5 border rounded  p-4 bg-white\">\r\n                        <h1 className=\"display-4 text-center\">About the hotel</h1>\r\n                        <div className=\"text-muted text-center\" style={{ fontSize: 20, fontWeight: 300 }}>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni, odio, ea blanditiis\r\n                            accusantium voluptates molestias consectetur maxime cum non mollitia, iusto ad similique\r\n                            totam tempora? Ipsa commodi ipsam fugit autem?\r\n                        </div>\r\n                    </div>\r\n                    <RoomsSlider roomsArr={roomsArr} />\r\n                    <HallsSlider hallsArr={hallsArr} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","const RatingComponent = (props) => {\r\n    let { avg_rating, reviewsCount } = props;\r\n\r\n    let num = avg_rating;\r\n    if (num == null || num === undefined) {\r\n        num = 0;\r\n        reviewsCount = 0;\r\n    }\r\n\r\n    num = num.toFixed(2);\r\n    num = parseFloat(num);\r\n    let intPart = Math.trunc(num);\r\n    let showHalfStar = null;\r\n    let emptyStarsCount = null;\r\n    let decPart = parseFloat((num - intPart).toFixed(2));\r\n\r\n    if (decPart >= 0.75) {\r\n        intPart++;\r\n    }\r\n    if (decPart < 0.75 && decPart >= 0.25) {\r\n        showHalfStar = true;\r\n    }\r\n    if ((intPart == 4 && showHalfStar) || intPart == 5) {\r\n        emptyStarsCount = null;\r\n    } else {\r\n        emptyStarsCount = 5 - intPart;\r\n    }\r\n\r\n    let fullStarsArr = [];\r\n    for (let i = 0; i < intPart; i++) {\r\n        fullStarsArr.push(i);\r\n    }\r\n\r\n    let emptyStarsArr = [];\r\n    for (let i = 0; i < emptyStarsCount; i++) {\r\n        emptyStarsArr.push(i);\r\n    }\r\n\r\n    return (\r\n        <section className=\"card-rating\">\r\n            {fullStarsArr.map((index) => {\r\n                return <i key={index} className=\"fas fa-star\"></i>;\r\n            })}\r\n            {!!showHalfStar && <i className=\"fas fa-star-half-alt\"></i>}\r\n            {emptyStarsArr.map((index) => {\r\n                return <i key={index} className=\"far fa-star\"></i>;\r\n            })}\r\n            {!!reviewsCount && <span className=\"small text-muted\"> ({reviewsCount})</span>}\r\n            {/* {!reviewsCount && <span className=\"small text-muted\"> (0)</span>} */}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default RatingComponent;\r\n","const addToCart = (obj) => {\r\n    console.log(obj);\r\n    let items = JSON.parse(localStorage.getItem('items')) || [];\r\n    items = [...items, { ...obj }];\r\n    localStorage.setItem('items', JSON.stringify(items));\r\n};\r\n\r\nexport default addToCart;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../styles/card.css';\r\n\r\nimport RatingComponent from '../../utils/RatingComponent';\r\nimport addToCart from '../cart/addToCart';\r\n\r\nfunction Card(props) {\r\n    // states\r\n    const { item, type } = props;\r\n\r\n    const [addToCartClicked, setAddToCartClicked] = useState(null);\r\n\r\n    return (\r\n        <div className=\"m-2 p-2 rounded shadow-sm border bg-light\">\r\n            <div className=\"\">\r\n                <img\r\n                    loading=\"lazy\"\r\n                    style={{ maxWidth: '100%' }}\r\n                    src=\"https://images.unsplash.com/photo-1582719478250-c89cae4dc85b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8aG90ZWwlMjByb29tfGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <section className=\"card-title\">\r\n                    {type === 'room' && (\r\n                        <Link to={'/single-room-page/' + item._id}>\r\n                            {item && item.title ? item.title : 'some title'}\r\n                        </Link>\r\n                    )}\r\n                    {type === 'hall' && (\r\n                        <Link to={'/single-hall-page/' + item._id}>\r\n                            {item && item.title ? item.title : 'some title'}\r\n                        </Link>\r\n                    )}\r\n                </section>\r\n                <section className=\"card-price text-success\">\r\n                    {item && item.discount && (\r\n                        <>\r\n                            <span style={{ textDecoration: 'line-through', marginRight: 4 }}>${item.price}</span>\r\n                            <span className=\"\">${item.price - item.discount}</span>\r\n                        </>\r\n                    )}\r\n                    {item && !item.discount && (\r\n                        <>\r\n                            <span className=\"\">${item.price}</span>\r\n                        </>\r\n                    )}\r\n                </section>\r\n                {item && <RatingComponent avg_rating={item.avg_rating} reviewsCount={item.reviewsCount} />}\r\n                <section className=\"card-button\">\r\n                    <button\r\n                        className=\"w-100 mt-2 btn btn-success\"\r\n                        onClick={() => {\r\n                            addToCart({ type: type, _id: item._id, name: item.title });\r\n                            setAddToCartClicked(true);\r\n                            setTimeout(() => {\r\n                                setAddToCartClicked(null);\r\n                            }, 1500);\r\n                        }}\r\n                        disabled={addToCartClicked ? true : false}\r\n                    >\r\n                        {addToCartClicked ? 'added to cart' : 'Add To Cart'}\r\n                    </button>\r\n                    {type === 'room' && (\r\n                        <Link to={'/single-room-page/' + item._id} className=\"w-100 btn my-2 btn-primary\">\r\n                            view room\r\n                        </Link>\r\n                    )}\r\n                    {type === 'hall' && (\r\n                        <Link to={'/single-hall-page/' + item._id} className=\"w-100 btn my-2 btn-primary\">\r\n                            view hall\r\n                        </Link>\r\n                    )}\r\n                </section>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n"],"sourceRoot":""}